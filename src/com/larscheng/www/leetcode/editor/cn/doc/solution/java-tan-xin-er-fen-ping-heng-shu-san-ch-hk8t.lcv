### 解题思路

此处撰写解题思路
1、贪心法对两个数组排序，然后遍历每个house,使用暴力搜索法在heaters中找到离house最近的heater。
2、使用二分法在heaters中找到离house最近的heater。
3、使用TreeSet floor, ceiling方法快速找到离house最近的heater。

### 代码

# 方法一：暴力搜索

* java

```java
class Solution {
    public int findRadius(int[] houses, int[] heaters) {
        // 贪心法，先对两个数组从小到大排序。然后遍历每个house，找到离house最近的heater点，计算距离。 最后所有距离中取最大的即为答案
        Arrays.sort(houses);
        Arrays.sort(heaters);
        int res = 0;
        for (int house : houses) {
            // ## 方法一：暴力搜
            int i = 0;
            while (i + 1 <= heaters.length - 1 && Math.abs(heaters[i] - house) >= Math.abs(heaters[i + 1] - house)) i++;// 注意是大于等于。。。
            res = Math.max(res, Math.abs(heaters[i] - house));
        }

        return res;
    }
}
```

# 方法二：二分查找

* java

```java
class Solution {
    public int findRadius(int[] houses, int[] heaters) {
        Arrays.sort(houses);
        Arrays.sort(heaters);
        int res = 0;
        for (int house : houses) {
            // 二分查找
            int l = 0; 
            int r = heaters.length - 1;
            // 在heaters中找到最接近house的左侧的值
            while (l < r) {
                int mid = l + r >> 1;
                if (heaters[mid] >= house) r = mid;
                else l = mid + 1;
            }
            int leftTmp = l;
            l = 0; 
            r = heaters.length - 1;
            // 在heaters中找到最接近house的左侧的值
            while (l < r) {
                int mid = l + r + 1>> 1;
                if (heaters[mid] <= house) l = mid;
                else r = mid - 1;
            }

            int rightTmp = r;
            // 左右侧值取最小的，结果取所有最小中的最大的
            res = Math.max(res, Math.min(Math.abs(heaters[leftTmp] - house), Math.abs(heaters[rightTmp] - house)));
        }

        return res;
    }
}
```

# 方法三：TreeSet平衡树

* java

```java
class Solution {
    public int findRadius(int[] houses, int[] heaters) {
        Arrays.sort(houses);
        int res = 0;
        TreeSet<Integer> set = new TreeSet<>();
        for (int heater : heaters) set.add(heater);
        int INF = 2100000000;
        set.add(INF);
        set.add(-INF);
        for (int house : houses) {
            int left = set.floor(house);
            int right = set.ceiling(house);
            res = Math.max(res, Math.min(Math.abs(left - house), Math.abs(right - house)));
        }

        return res;
    }
}
```

