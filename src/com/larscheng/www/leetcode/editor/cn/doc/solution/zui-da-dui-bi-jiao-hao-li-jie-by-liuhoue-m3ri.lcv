### 解题思路

最大堆比较好理解，效率肯定不是最好的，易于理解，全部塞进去，然后依次取出堆顶元素就是结果了

### 代码

* java

```java
class Solution {
    public int findKthLargest(int[] nums, int k) {

        //获取一个最大堆
        PriorityQueue<Integer> queue = new PriorityQueue(new Comparator() {
            @Override
            public int compare(Object o1, Object o2) {
                return Integer.valueOf(String.valueOf(o2)) - Integer.valueOf(String.valueOf(o1));
            }
        });
        for (int num : nums) {
            queue.add(num);
        }

        int res = -1;
        for (int i = 0; i < k; i++) {
            res = queue.poll();
        }
        return res;
    }
}
```

