* 

```
class Solution {
public:
    vector<char> a = { 'a','b','c','d','e','f' };
    string toHex(int num) {
        if (num == 0)
            return "0";
        if (num > 0) {
            string res = "";
            while (num > 0) {
                int x = num % 16;
                num /= 16;
                if (x < 10) {
                    res = to_string(x) + res;
                }
                else {
                    res = a[x - 10] + res;
                }
            }
            return res;
        }
        else {
            //然后将num转成二进制
            long long num1 = 0;
            if(num == -2147483648){
                return "80000000";
            }else{
                num1 = -1 * num;
            }
            string res = "";
            while (num1 > 0) {
                res = to_string(num1 % 2) + res;
                num1 /= 2;
            }
            //然后补0
            string add(32 - res.size(), '0');
            res = add + res;
            res[0] = '1';       //符号位
            //除第一位取反
            for (int i = 1; i < 32; i++) {
                if (res[i] == '1') res[i] = '0';
                else res[i] = '1';
            }
            //加1
            res[31] += 1;
            //进位
            for (int i = 31; i >= 0 && res[i] == '2'; i--) {
                res[i] = '0';
                res[i - 1] += 1;
            }
            //转16进制度
            string ret = "";
            for (int i = 0; i < 31; i += 4) {
                int x = 8 * (res[i] - '0') + 4 * (res[i + 1] - '0') + 2 * (res[i + 2] - '0') + 1 * (res[i + 3] - '0');
                if (x < 10) {
                    ret += to_string(x);
                }
                else {
                    ret += a[x - 10];
                }
            }
            return ret;
        }
    }
};
```

