> Problem: [518. 零钱兑换 II](https://leetcode.cn/problems/coin-change-ii/description/)

[TOC]

# 思路

> 讲述看到这一题的思路
> 显然这是一个01背包问题，同时也和上楼梯问题有相似之处。

# 解题方法

动态规划

> 描述你的解题方法
> 考虑使用动态规划，但是注意将coin放在外层循环，否则每个coin带来的d＊＊＊多次计算。

# 复杂度

时间复杂度:

> 添加时间复杂度, 示例： $O(n)$

空间复杂度:

> 添加空间复杂度, 示例： $O(n)$

# Code

* []

```C++
class Solution {
    
public:
    int change(int amount, vector<int>& coins) {
        int n=coins.size();
        int dp[5010]={};
        dp[0]=1;
        for(int i=0;i<n;i++)
        {
            for(int j=coins[i];j<=amount;j++)
            {
                dp[j]+=dp[j-coins[i]];
            }
        }
        return dp[amount];
    }
};
```

