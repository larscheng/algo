* 

```
class Solution {
    public int findCircleNum(int[][] isConnected) {
        int n = isConnected.length;
        int size = n;
        UnionFind uf = new UnionFind(n);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < i; j++) {
                if (isConnected[i][j] == 1 && uf.find(i) != uf.find(j)) {
                    uf.union(i, j);
                    size--;
                }
            }
        }
        return size;
    }
}
class UnionFind {
    int[] parent;
    public UnionFind(int n) {
        parent = new int[n];
        for (int i = 0; i < n; i++) {
            parent[i] = i;
        }
    }
    public int find(int x) {
        if (parent[x] != x) {
            parent[x] = find(parent[x]);
        }
        return parent[x];
    }
    public void union(int x, int y) {
        parent[find(x)] = find(y);
    }
}
```

